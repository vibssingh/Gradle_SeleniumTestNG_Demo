<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-02T16:24:36 IST" name="Gradle suite" finished-at="2024-09-02T16:25:03 IST" duration-ms="27208">
    <groups>
    </groups>
    <test started-at="2024-09-02T16:24:36 IST" name="Gradle test" finished-at="2024-09-02T16:25:03 IST" duration-ms="27208">
      <class name="org.example.LoginTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.example.LoginTests@61c4eee0]" started-at="2024-09-02T16:24:36 IST" name="setUp" finished-at="2024-09-02T16:24:44 IST" duration-ms="8048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyIncorrectCredentials()[pri:0, instance:org.example.LoginTests@61c4eee0]" started-at="2024-09-02T16:24:44 IST" name="verifyIncorrectCredentials" description="This test validates error message when credentials are incorrect" finished-at="2024-09-02T16:24:46 IST" duration-ms="2252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIncorrectCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.example.LoginTests@61c4eee0]" started-at="2024-09-02T16:24:46 IST" name="tearDown" finished-at="2024-09-02T16:24:46 IST" duration-ms="301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.example.LoginTests@61c4eee0]" started-at="2024-09-02T16:24:46 IST" name="setUp" finished-at="2024-09-02T16:24:53 IST" duration-ms="6420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBlankCredentials()[pri:1, instance:org.example.LoginTests@61c4eee0]" started-at="2024-09-02T16:24:53 IST" name="verifyBlankCredentials" description="This test will fail" finished-at="2024-09-02T16:24:54 IST" duration-ms="1010" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Invalid credentials] but found [Required]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Invalid credentials] but found [Required]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at org.example.LoginTests.verifyBlankCredentials(LoginTests.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:153)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:95)
at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBlankCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.example.LoginTests@61c4eee0]" started-at="2024-09-02T16:24:54 IST" name="tearDown" finished-at="2024-09-02T16:24:54 IST" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.example.LoginTests@61c4eee0]" started-at="2024-09-02T16:24:54 IST" name="setUp" finished-at="2024-09-02T16:25:00 IST" duration-ms="6400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginPage()[pri:2, instance:org.example.LoginTests@61c4eee0]" started-at="2024-09-02T16:25:00 IST" name="verifyLoginPage" description="This test validates  successful login to Home page" finished-at="2024-09-02T16:25:02 IST" duration-ms="2319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.example.LoginTests@61c4eee0]" started-at="2024-09-02T16:25:02 IST" name="tearDown" finished-at="2024-09-02T16:25:03 IST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.example.LoginTests -->
    </test> <!-- Gradle test -->
  </suite> <!-- Gradle suite -->
</testng-results>
